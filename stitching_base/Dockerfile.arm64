FROM nvcr.io/nvidia/l4t-base:r32.4.4

RUN \
      apt-get update -y && \
      # software-properties-common for add-apt-repository
      apt-get install -y --no-install-recommends apt-utils && \
      apt-get install -y --no-install-recommends software-properties-common curl wget apt-utils && \
      # node v14 (LTS until 2023-04-30)
      curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
      apt-get install -y --no-install-recommends \
       python3.7 python3.7-dev python3.7-venv python3-pip python3-setuptools python3-numpy nodejs build-essential \
       automake libtool unzip nasm yasm checkinstall cmake pkg-config yasm git gfortran libjpeg8-dev \
       libpng-dev libx264-dev libx265-dev libnuma-dev libvpx-dev libfdk-aac-dev libmp3lame-dev libopus-dev \
       libssh-dev gnutls-bin libgnutls28-dev libavdevice-dev libtiff-dev libavcodec-dev libavformat-dev \
       libswscale-dev libavutil-dev libavresample-dev libdc1394-22-dev libxine2-dev libv4l-dev ffmpeg && \
      # use python 3.7
      update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 && \
      update-alternatives --config python3 && \
      cd /usr/include/linux && \
      ln -s -f ../libv4l1-videodev.h videodev.h && \
      apt-get install -y --no-install-recommends \
       sudo g++-7 gdb clang-format-10 libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgtk2.0-dev libtbb-dev \
       qt5-default libatlas-base-dev libfaac-dev libtheora-dev libvorbis-dev libxvidcore-dev libopencore-amrnb-dev \
       libopencore-amrwb-dev x264 v4l-utils libva-dev libx11-dev xorg-dev libglew1.5 libglew1.5-dev \
       libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev libglfw3-dev libglfw3 freeglut3-dev \
       libzbar-dev libzbar0 libmediainfo-dev mediainfo libqrencode-dev \
      python3-gst-1.0 && \
      apt-get install --reinstall ca-certificates && \
      rm -rf /var/lib/apt/lists/* && \
      # use latest cmake
      pip3 install pip==21.3.1 && \
      pip install scikit-build && \
      pip install cmake --upgrade && \
      update-alternatives --install /usr/bin/cmake cmake /usr/local/bin/cmake 1 --force && \
      # dvc work around
      pip install pygit2 && \
      pip install --no-cache-dir --exists-action w 'dvc[gs]' && \
      pip install gcovr && \
      # qr-libsynch for python3.6
      python3.6 -m pip install setuptools
WORKDIR /root

# is this used?
ADD nvcodec.sh .
RUN bash nvcodec.sh && rm -rfv nvcodec.sh nv-codec-headers

ADD tensorflow_prebuilt.sh .
RUN bash tensorflow_prebuilt.sh && rm -rfv tensorflow_prebuilt.sh 

ADD opencv.sh.arm64 ./opencv.sh
RUN bash opencv.sh && rm -rfv opencv.sh

ADD live555.sh .
RUN bash live555.sh && rm -rfv live555.sh

ADD hlsserver.sh .
RUN bash hlsserver.sh && rm -rfv hlsserver.sh hls-server

ADD googletest.sh .
RUN bash googletest.sh && rm -rfv googletest.sh googletest

ADD gst-qroverlay.sh .
RUN bash gst-qroverlay.sh && rm -rfv gst-qroverlay.sh gst-qroverlay

ADD qr-lipsync.sh .
RUN bash qr-lipsync.sh && rm -rfv qr-lipsync.sh qr-lipsync

ADD spdlog.sh .
RUN bash spdlog.sh && rm -rfv spdlog.sh spdlog

# for import numpy
ENV OPENBLAS_CORETYPE=ARMV8
# basler mipi camera detect
ENV GENICAM_GENTL64_PATH=/opt/dart-bcon-mipi/lib/

ENTRYPOINT ["/bin/bash"]
